

                                               THROTELLING


Throttling is similar to permissions, in that it determines if a request should be authorized. Throttles indicate a temporary state, and are used to control the rate of requests that clients can make to an API.

 Your API might have a restrictive throttle for unauthenticated requests, and a less restrictive throttle for authenticated requests.

 The default throttling policy may be set globally, using the DEFAULT_THROTTLE_CLASSES and DEFAULT_THROTTLE_RATES settings. For example.

 REST_FRAMEWORK = {
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '100/day',     # for anonymous user
        'user': '1000/day'     #   # for authenticated user
    }
}

The rate descriptions used in DEFAULT_THROTTLE_RATES may include second, minute, hour or day as the throttle period.

        AnonRateThrottle

The AnonRateThrottle will only ever throttle unauthenticated users. The IP address of the incoming request is used to generate a unique key to throttle against.
The rate property on the class, which may be provided by overriding AnonRateThrottle and setting the property.

             UserRateThrottle
The UserRateThrottle will throttle users to a given rate of requests across the API. The user id is used to generate a unique key to throttle against. Unauthenticated requests will fall back to using the IP address of the incoming request to generate a unique key to throttle against.

The rate property on the class, which may be provided by overriding UserRateThrottle and setting the property.

ScopedRateThrottle
The ScopedRateThrottle class can be used to restrict access to specific parts of the API.

